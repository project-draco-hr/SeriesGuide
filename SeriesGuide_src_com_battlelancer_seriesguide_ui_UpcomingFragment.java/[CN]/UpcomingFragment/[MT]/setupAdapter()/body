{
  String[] from=new String[]{Episodes.TITLE,Episodes.WATCHED,Episodes.NUMBER,Episodes.FIRSTAIRED,Shows.TITLE,Shows.NETWORK};
  int[] to=new int[]{R.id.textViewUpcomingEpisode,R.id.watchedBoxUpcoming,R.id.textViewUpcomingNumber,R.id.textViewUpcomingAirdate,R.id.textViewUpcomingShow,R.id.textViewUpcomingNetwork};
  mAdapter=new SimpleCursorAdapter(getActivity(),R.layout.upcoming_row,null,from,to,0);
  mAdapter.setViewBinder(new ViewBinder(){
    public boolean setViewValue(    View view,    final Cursor cursor,    int columnIndex){
      if (columnIndex == UpcomingQuery.WATCHED) {
        WatchedBox wb=(WatchedBox)view;
        final String rowid=cursor.getString(UpcomingQuery._ID);
        wb.setOnClickListener(new OnClickListener(){
          public void onClick(          View v){
            ((WatchedBox)v).toggle();
            SeriesDatabase.markEpisode(getActivity(),rowid,((WatchedBox)v).isChecked());
          }
        }
);
        wb.setChecked(cursor.getInt(columnIndex) > 0);
        return true;
      }
 else       if (columnIndex == UpcomingQuery.NUMBER) {
        TextView text=(TextView)view;
        String episodeString=cursor.getString(UpcomingQuery.SEASON);
        String number=cursor.getString(UpcomingQuery.NUMBER);
        if (number.length() == 1) {
          episodeString+="x0" + number;
        }
 else {
          episodeString+="x" + number;
        }
        text.setText(episodeString);
        return true;
      }
 else       if (columnIndex == UpcomingQuery.FIRSTAIRED) {
        TextView tv=(TextView)view;
        String fieldValue=cursor.getString(UpcomingQuery.FIRSTAIRED);
        if (fieldValue.length() != 0) {
          tv.setText(SeriesGuideData.parseDateToLocalRelative(fieldValue,cursor.getLong(UpcomingQuery.SHOW_AIRSTIME),getActivity()));
        }
 else {
          tv.setText("");
        }
        return true;
      }
 else       if (columnIndex == UpcomingQuery.SHOW_NETWORK) {
        TextView tv=(TextView)view;
        String fieldValue="";
        long airtime=cursor.getLong(UpcomingQuery.SHOW_AIRSTIME);
        String value=SeriesGuideData.parseMillisecondsToTime(airtime,null,false,getActivity())[0];
        if (value.length() != 0) {
          fieldValue+=value + " ";
        }
        value=cursor.getString(UpcomingQuery.SHOW_NETWORK);
        if (value.length() != 0) {
          fieldValue+=getString(R.string.show_network) + " " + value;
        }
        tv.setText(fieldValue);
        return true;
      }
      return false;
    }
  }
);
  AbsListView list=(AbsListView)getActivity().findViewById(android.R.id.list);
  if (android.os.Build.VERSION.SDK_INT < 11) {
    ((ListView)list).setAdapter(mAdapter);
  }
 else {
    list.setAdapter(mAdapter);
  }
  list.setFastScrollEnabled(true);
  list.setOnItemClickListener(onItemClickListener);
  View emptyView=getActivity().findViewById(android.R.id.empty);
  if (emptyView != null) {
    list.setEmptyView(emptyView);
  }
  registerForContextMenu(list);
}
