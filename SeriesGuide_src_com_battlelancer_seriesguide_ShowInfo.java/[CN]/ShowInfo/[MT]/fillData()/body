{
  TextView seriesname=(TextView)findViewById(R.id.title);
  TextView overview=(TextView)findViewById(R.id.TextViewShowInfoOverview);
  TextView actors=(TextView)findViewById(R.id.TextViewShowInfoActors);
  TextView airstime=(TextView)findViewById(R.id.TextViewShowInfoAirtime);
  TextView contentrating=(TextView)findViewById(R.id.TextViewShowInfoContentRating);
  TextView firstaired=(TextView)findViewById(R.id.TextViewShowInfoFirstAirdate);
  TextView genres=(TextView)findViewById(R.id.TextViewShowInfoGenres);
  TextView network=(TextView)findViewById(R.id.TextViewShowInfoNetwork);
  TextView rating=(TextView)findViewById(R.id.value);
  TextView runtime=(TextView)findViewById(R.id.TextViewShowInfoRuntime);
  TextView status=(TextView)findViewById(R.id.TextViewShowInfoStatus);
  ImageView showart=(ImageView)findViewById(R.id.ImageViewShowInfoPoster);
  Button showInIMDB=(Button)findViewById(R.id.buttonShowInfoIMDB);
  final Series show=SeriesDatabase.getShow(this,seriesid);
  if (show == null) {
    finish();
  }
  seriesname.setText(show.getSeriesName());
  if (show.getOverview().length() == 0) {
    overview.setText(getString(R.string.show_pleaseupdate));
  }
 else {
    overview.setText(show.getOverview());
  }
  if (show.getAirsDayOfWeek().length() == 0 && show.getAirsTime() == -1) {
    airstime.setText(getString(R.string.show_noairtime));
  }
 else {
    String[] values=SeriesGuideData.parseMillisecondsToTime(show.getAirsTime(),show.getAirsDayOfWeek(),true,getApplicationContext());
    airstime.setText(getString(R.string.show_airs) + " " + values[1]+ " "+ values[0]);
  }
  if (show.getNetwork().length() == 0) {
    network.setText("");
  }
 else {
    network.setText(getString(R.string.show_network) + " " + show.getNetwork());
  }
  if (show.getStatus().equalsIgnoreCase("Continuing")) {
    status.setTextColor(Color.GREEN);
    status.setText(getString(R.string.show_isalive));
  }
 else   if (show.getStatus().equalsIgnoreCase("Ended")) {
    status.setTextColor(Color.GRAY);
    status.setText(getString(R.string.show_isnotalive));
  }
  actors.setText(getString(R.string.show_actors) + " " + SeriesGuideData.splitAndKitTVDBStrings(show.getActors()));
  contentrating.setText(getString(R.string.show_contentrating) + " " + show.getContentRating());
  firstaired.setText(getString(R.string.show_firstaired) + " " + SeriesGuideData.parseDateToLocal(show.getFirstAired(),show.getAirsTime(),getApplicationContext()));
  genres.setText(getString(R.string.show_genres) + " " + SeriesGuideData.splitAndKitTVDBStrings(show.getGenres()));
  String ratingText=show.getRating();
  if (ratingText != null && ratingText.length() != 0) {
    RatingBar ratingBar=(RatingBar)findViewById(R.id.bar);
    ratingBar.setProgress((int)(Double.valueOf(ratingText) / 0.1));
    rating.setText(ratingText + "/10");
  }
  runtime.setText(getString(R.string.show_runtime) + " " + show.getRuntime()+ " "+ getString(R.string.show_airtimeunit));
  showInIMDB.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      AnalyticsUtils.getInstance(ShowInfo.this).trackEvent("ShowInfo","Click","Show in IMDB",0);
      String imdbid=show.getImdbId();
      if (imdbid.length() != 0) {
        Intent myIntent=new Intent(Intent.ACTION_VIEW,Uri.parse("imdb:///title/" + imdbid + "/"));
        try {
          startActivity(myIntent);
        }
 catch (        ActivityNotFoundException e) {
          myIntent=new Intent(Intent.ACTION_VIEW,Uri.parse(IMDB_TITLE_URL + imdbid));
          startActivity(myIntent);
        }
      }
 else {
        Toast.makeText(getApplicationContext(),getString(R.string.noIMDBentry),Toast.LENGTH_LONG).show();
      }
    }
  }
);
  Bitmap bitmap=imageCache.get(show.getPoster());
  if (bitmap != null) {
    showart.setImageBitmap(bitmap);
  }
 else {
    showart.setImageBitmap(null);
  }
}
